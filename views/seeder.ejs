<%- include('partials/head.ejs', {
	page: 'seeder',
	title: 'Seeder',
	css: [
		'seeder.css'
	],
	jsDefer: [
		'seeder.js'
	]
}) %>

<% if (typeof seeding == 'undefined') { %>
	<a href="/api/scraper/init/realDonaldTrump" target="_blank">Initialize Scrape Controller</a> to start.<br>
<% } else { %>
<div class="step">
	<h3>Useful links</h3>
	<p>Warning, pressing the wrong button on this page can destroy the entire database.</p>
	<ul>
		<li>
			<a href="/api/scraper/init/realDonaldTrump" target="_blank">Re-initialize scrape control</a><br>
			!! Warning: TweetScrape table will be dropped and controller reset
		</li>
		<li>
			<a href="/api/scraper/tweet/1246561509645352961" target="_blank">Inspect tweet</a><br>
			Better done from Postman (bc JSON formatting)
		</li>
		<li>
			<a href="/api/scraper/test-payload/1246561509645352961/true" target="_blank">Test payload</a> (rendered) or 
			<a href="/api/scraper/test-payload/1246561509645352961/false" target="_blank">Test payload</a> (html)<br>
			Payload using npm got is only used for simpleScrape,<br>
			to temporarily scrape tweets until we get to run them by API.<br>
			It uses the same IE6 user-agent as puppeteer
		</li>
	</ul>
</div>
<% } %>

<div class="step">
	<h3>Step 1: Import Ids</h3>
	<p>Take a JSON file with tweets from the /data folder and seed them to a collection.<br>
	When only importing ids, we'll look for <i>id_str</i> and ignore the rest.</p>
	<form id="form-seed">
		<div class="input-wrap">
			<label>Target Collection</label>
			<input type="text" name="collection" value="TweetScrape" placeholder="Target collection">
		</div>
		<div class="input-wrap">
			<label>JSON filename</label>
			<input type="text" name="filename" value="tta-20-06-12.json" placeholder="filename.json">
		</div>
		<div class="input-wrap clear">
			<label>Delete Previous Data</label>
			<div class="dropdown">
				<select name="drop-collection-seed">
					<option value="0">no, keep</option>
					<option value="1" selected>yes, delete</option>
				</select>
				<div class="dsp">yes, delete</div>
			</div>
		</div>
		<div class="input-wrap">
			<label>What to import</label>
			<div class="dropdown">
				<select name="ids-only">
					<option value="1" selected>ids only</option>
					<option value="0">full tweets</option>
				</select>
				<div class="dsp">only ids</div>
			</div>
		</div>
		<div class="process">
			<br><br>
			<button id="btn-seed" class="<% if (seeding) { %>on<% } %>"></button>
			<div class="display"></div>
		</div>
	</form>
</div>

<div class="step">
	<h3>Step2: Extract Tweets</h3>
	<p>Cycle through tweets, fetch and store tweet data from Twitter API.</p>
	<div class="process">
		<button id="btn-extract" class="<% if (extracting) { %>on<% } %>"></button>
		<div class="display"></div>
	</div>
</div>

<div class="step">
	<h3>Step3: Transfer Data</h3>
	<p>Transfer the fully completed collection of tweets to the main table.<br>
	(TweetScrape to Tweet)</p>
	<form>
		<div class="input-wrap">
			<label>Delete previous data</label>
			<div class="dropdown">
				<select name="drop-collection-transfer">
					<option value="0">no, keep</option>
					<option value="1" selected>yes, delete</option>
				</select>
				<div class="dsp">yes, delete</div>
			</div>
		</div>
		<div class="process transfer-wrap">
			<label></label>
			<button id="btn-transfer"></button>
			<div class="display"></div>
		</div>
	</form>
</div>


<%- include('partials/foot.ejs') %>